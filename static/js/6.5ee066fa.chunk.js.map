{"version":3,"sources":["hoc/withAuthRedirect.jsx","components/common/CustomForms/CustomForms.jsx","components/common/CustomForms/CustomForms.module.css","utils/validators/validator.js","components/Login/Login.module.css","components/Login/Login.jsx"],"names":["withAuthRedirect","Component","connect","state","userId","auth","id","props","replace","to","withBackAuthRedirect","CustomField","input","meta","hasError","error","touched","className","classes","textareaWrapper","type","Input","Textarea","textarea","module","exports","requiredField","value","undefined","maxLengthCreator","maxLength","length","LoginReduxForm","reduxForm","form","handleSubmit","action","loginForm","onSubmit","name","component","validate","placeholder","errorMessage","compose","loginTC","useEffect","login","formData","then"],"mappings":"oNAIaA,EAAmB,SAACC,GAK7B,OAAOC,aAJiB,SAACC,GAAD,MAAY,CAChCC,OAAQD,EAAME,KAAKC,MAGhBJ,EAAyB,SAACK,GAC7B,OAAKA,EAAMH,OACJ,cAACH,EAAD,eAAeM,IADI,cAAC,IAAD,CAAUC,SAAO,EAACC,GAAG,kBAK1CC,EAAuB,SAACT,GAKjC,OAAOC,aAJiB,SAACC,GAAD,MAAY,CAChCC,OAAQD,EAAME,KAAKC,MAGhBJ,EAAyB,SAACK,GAC7B,OAAIA,EAAMH,OAAe,cAAC,IAAD,CAAUI,SAAO,EAACC,GAAG,mBACvC,cAACR,EAAD,eAAeM,S,0ICnBjBI,EAAc,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,KAASN,EAAY,iBAChDO,EAAWD,EAAKE,OAASF,EAAKG,QACpC,OACI,sBAAKC,UAAS,UAAKC,IAAQC,gBAAb,YAAgCL,GAAYI,IAAQH,OAAlE,UACKR,EAAMa,KACD,cAACC,EAAD,2BAAWT,GAAWL,IACtB,cAACe,EAAD,2BAAeV,GAAWL,IAEhC,8BAAMO,GAAY,+BAAOD,EAAKE,cAKpCO,EAAW,SAACf,GAAD,OACb,oDAAcA,GAAd,IAAqBU,UAAWC,IAAQK,aAGtCF,EAAQ,SAACd,GAAD,OACV,iDAAWA,GAAX,IAAkBU,UAAWC,IAAQN,W,oBCpBzCY,EAAOC,QAAU,CAAC,MAAQ,2BAA2B,SAAW,8BAA8B,MAAQ,6B,iCCDrG,oEAAO,IAAMC,EAAgB,SAAAC,GAC1B,OAAOA,OAAQC,EAAY,qBAGlBC,EAAmB,SAAAC,GAAS,OAAI,SAAAH,GACzC,GAAIA,EAAO,OAAOA,EAAMI,QAAUD,OAAYF,EAA5B,yBAA0DE,M,oBCJhFN,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,UAAY,yBAAyB,MAAQ,qBAAqB,MAAQ,qBAAqB,aAAe,8B,iCCD7J,gHAkDMO,EAAiBC,YAAU,CAAEC,KAAM,SAAlBD,EArCL,SAAC,GAA6B,IAA3BE,EAA0B,EAA1BA,aAAcpB,EAAY,EAAZA,MAC/B,OACI,sBAAMqB,OAAO,GAAGnB,UAAWC,IAAQmB,UAAWC,SAAUH,EAAxD,SACI,sBAAKI,KAAK,UAAUtB,UAAWF,GAASG,IAAQH,MAAhD,UACI,cAAC,IAAD,CACIyB,UAAW7B,IACX8B,SAAU,CAACf,KACXa,KAAK,QACLnB,KAAK,OACLsB,YAAY,QACZzB,UAAWC,IAAQN,QAEvB,cAAC,IAAD,CACI4B,UAAW7B,IACX8B,SAAU,CAACf,KACXa,KAAK,WACLnB,KAAK,WACLsB,YAAY,WACZzB,UAAWC,IAAQN,QAEvB,gCACI,cAAC,IAAD,CACI4B,UAAU,QACVD,KAAK,aACLnB,KAAK,aAET,sHAIJ,4CACA,qBAAKH,UAAWC,IAAQyB,aAAxB,SAAuC5B,YA0BxC6B,sBAAQlC,IAAsBR,aAHrB,SAACC,GAAD,MAAY,CAChCC,OAAQD,EAAME,KAAKC,MAE+C,CAAEuC,cAAzDD,EAlBD,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,QAASzC,EAAa,EAAbA,OACtB0C,qBAAU,cAEP,CAAC1C,IAKJ,OACI,sBAAKa,UAAWC,IAAQ6B,MAAxB,UACI,uCACA,cAACf,EAAD,CAAgBM,SANP,SAACU,GACT5C,GAAQyC,EAAQG,GAAUC,MAAK","file":"static/js/6.5ee066fa.chunk.js","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Navigate } from \"react-router-dom\";\n\nexport const withAuthRedirect = (Component) => {\n    const mapStateToProps = (state) => ({\n        userId: state.auth.id,\n    })\n\n    return connect(mapStateToProps)((props) => {\n        if (!props.userId) return <Navigate replace to=\"/../login\" />\n        return <Component {...props} />\n    })\n}\n\nexport const withBackAuthRedirect = (Component) => {\n    const mapStateToProps = (state) => ({\n        userId: state.auth.id,\n    })\n\n    return connect(mapStateToProps)((props) => {\n        if (props.userId) return <Navigate replace to=\"/../profile/me\" />\n        return <Component {...props} />\n    })\n}","import React from \"react\";\nimport classes from \"./CustomForms.module.css\";\n\nexport const CustomField = ({ input, meta, ...props }) => {\n    const hasError = meta.error && meta.touched\n    return (\n        <div className={`${classes.textareaWrapper} ${hasError && classes.error}`}>\n            {props.type\n                ? <Input {...input} {...props} />\n                : <Textarea  {...input} {...props} />\n            }\n            <div>{hasError && <span>{meta.error}</span>}</div>\n        </div>\n    )\n}\n\nconst Textarea = (props) => (\n    <textarea {...props} className={classes.textarea}></textarea>\n)\n\nconst Input = (props) => (\n    <input {...props} className={classes.input}/>\n)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"CustomForms_error__1i_LA\",\"textarea\":\"CustomForms_textarea__24t2G\",\"input\":\"CustomForms_input__2n7gA\"};"," export const requiredField = value => {\n    return value ? undefined : \"Field is required\";\n}\n\nexport const maxLengthCreator = maxLength => value => {\n    if (value) return value.length <= maxLength ? undefined : `Max lenhgth is ${maxLength}`\n    return undefined\n}\n\nexport const minLengthCreator = minLength => value => {\n    if (value) return value.length >= minLength ? undefined : `Min lenhgth is ${minLength}`\n    return undefined\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__2Px22\",\"loginForm\":\"Login_loginForm__1Hg13\",\"input\":\"Login_input__1zhXD\",\"error\":\"Login_error__17Wu6\",\"errorMessage\":\"Login_errorMessage__1EjD8\"};","import React from \"react\";\nimport { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { withBackAuthRedirect } from \"../../hoc/withAuthRedirect\";\nimport { loginTC } from \"../../Redux/auth-reducer\";\nimport { requiredField } from \"../../utils/validators/validator\";\nimport { CustomField } from \"../common/CustomForms/CustomForms\";\nimport classes from \"./Login.module.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useState } from \"react\";\n\nconst LoginForm = ({ handleSubmit, error }) => {\n    return (\n        <form action=\"\" className={classes.loginForm} onSubmit={handleSubmit}>\n            <div name=\"wrapper\" className={error && classes.error}>\n                <Field\n                    component={CustomField}\n                    validate={[requiredField]}\n                    name=\"input\"\n                    type=\"text\"\n                    placeholder=\"login\"\n                    className={classes.input}\n                />\n                <Field\n                    component={CustomField}\n                    validate={[requiredField]}\n                    name=\"password\"\n                    type=\"password\"\n                    placeholder=\"password\"\n                    className={classes.input}\n                />\n                <div>\n                    <Field\n                        component=\"input\"\n                        name=\"rememberMe\"\n                        type=\"checkbox\"\n                    />\n                    <span>\n                        Запомнить меня\n                    </span>\n                </div>\n                <button>Log in</button>\n                <div className={classes.errorMessage}>{error}</div>\n            </div>\n        </form>\n    )\n}\n\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)\n\nconst Login = ({ loginTC, userId }) => {\n    useEffect(() => {\n\n    }, [userId])\n   \n    const onSubmit = (formData) => {\n        if (!userId) loginTC(formData).then(() => { })\n    }\n    return (\n        <div className={classes.login}>\n            <h1>Login</h1>\n            <LoginReduxForm onSubmit={onSubmit} />\n        </div>\n    )\n}\nconst mapStateToProps = (state) => ({\n    userId: state.auth.id,\n})\nexport default compose(withBackAuthRedirect, connect(mapStateToProps, { loginTC }))(Login);"],"sourceRoot":""}