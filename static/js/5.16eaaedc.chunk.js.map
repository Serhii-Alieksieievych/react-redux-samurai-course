{"version":3,"sources":["hoc/withAuthRedirect.jsx","components/common/CustomForms/CustomForms.jsx","components/common/CustomForms/CustomForms.module.css","utils/validators/validator.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogForm/DialogForm.jsx","components/Dialogs/Dialogs.jsx","Redux/dialogs-selectors.js","components/Dialogs/DialogsContainer.jsx"],"names":["withAuthRedirect","Component","connect","state","userId","auth","id","props","replace","to","withBackAuthRedirect","CustomField","input","meta","hasError","error","touched","className","classes","textareaWrapper","type","Input","Textarea","textarea","module","exports","requiredField","value","undefined","maxLengthCreator","maxLength","length","DialogItem","name","path","dialogItem","dialogLink","Message","message","outer","inner","maxLengthValidate","DialogReduxForm","reduxForm","form","handleSubmit","onSubmit","Field","component","placeholder","validate","Dialogs","sendMessage","dialogs","messages","dialogsItems","map","dialog","data","getMessagesSelector","dialogsPage","messagesArr","getDialogsSelector","dialogsArr","getCurrentMessageSelector","currentMessage","compose","dispatch","sendMessageActionCreator","changeNewMessageActionCreator","changeMessage","text"],"mappings":"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","file":"static/js/5.16eaaedc.chunk.js","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Navigate } from \"react-router-dom\";\n\nexport const withAuthRedirect = (Component) => {\n    const mapStateToProps = (state) => ({\n        userId: state.auth.id,\n    })\n\n    return connect(mapStateToProps)((props) => {\n        if (!props.userId) return <Navigate replace to=\"/../login\" />\n        return <Component {...props} />\n    })\n}\n\nexport const withBackAuthRedirect = (Component) => {\n    const mapStateToProps = (state) => ({\n        userId: state.auth.id,\n    })\n\n    return connect(mapStateToProps)((props) => {\n        if (props.userId) return <Navigate replace to=\"/../profile/me\" />\n        return <Component {...props} />\n    })\n}","import React from \"react\";\nimport classes from \"./CustomForms.module.css\";\n\nexport const CustomField = ({ input, meta, ...props }) => {\n    const hasError = meta.error && meta.touched\n    return (\n        <div className={`${classes.textareaWrapper} ${hasError && classes.error}`}>\n            {props.type\n                ? <Input {...input} {...props} />\n                : <Textarea  {...input} {...props} />\n            }\n            <div>{hasError && <span>{meta.error}</span>}</div>\n        </div>\n    )\n}\n\nconst Textarea = (props) => (\n    <textarea {...props} className={classes.textarea}></textarea>\n)\n\nconst Input = (props) => (\n    <input {...props} className={classes.input}/>\n)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"CustomForms_error__1i_LA\",\"textarea\":\"CustomForms_textarea__24t2G\",\"input\":\"CustomForms_input__2n7gA\"};"," export const requiredField = value => {\n    return value ? undefined : \"Field is required\";\n}\n\nexport const maxLengthCreator = maxLength => value => {\n    if (value) return value.length <= maxLength ? undefined : `Max lenhgth is ${maxLength}`\n    return undefined\n}\n\nexport const minLengthCreator = minLength => value => {\n    if (value) return value.length >= minLength ? undefined : `Min lenhgth is ${minLength}`\n    return undefined\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"messages\":\"Dialogs_messages__1w_Up\",\"dialogsItems\":\"Dialogs_dialogsItems__2sNe2\",\"form\":\"Dialogs_form__1EQXf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogItem\":\"DialogItem_dialogItem__2RuWv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1MOXo\",\"outer\":\"Message_outer__36jrQ\",\"inner\":\"Message_inner__2Zn5R\"};","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport classes from './DialogItem.module.css';\n\n\nconst DialogItem = (props) => {\n    const { name, id } = props;\n    const path = '/dialogs/' + id;\n    return (\n        <div className={classes.dialogItem}>\n            <Link className={classes.dialogLink} to={path}>\n                {name}\n            </Link>\n        </div>\n    )\n}\n\nexport default DialogItem;","import React from \"react\";\nimport classes from './Message.module.css';\n\nconst Message = (props) => {\n    const { message, userId } = props;\n\n    return (\n        <div className={`${classes.message} ${userId === 0 ? classes.outer : classes.inner}`}>{message}</div>\n    )\n}\n\nexport default Message;","import React from \"react\";\nimport { reduxForm, Field } from \"redux-form\";\nimport { CustomField } from \"../../common/CustomForms/CustomForms\";\nimport classes from '../Dialogs.module.css';\nimport { maxLengthCreator } from \"../../../utils/validators/validator\";\n\nconst maxLengthValidate = maxLengthCreator(500);\n\nconst DialogForm = ({ handleSubmit }) => {\n    return (\n        <form onSubmit={handleSubmit} className={classes.form}>\n            <Field component={CustomField} placeholder=\"message\" name=\"message\" validate={[maxLengthValidate]}/>\n            <button>Відправити повідомлення</button>\n        </form>\n    )\n}\n\nconst DialogReduxForm = reduxForm({ form: 'dialog'})(DialogForm)\n\nexport default DialogReduxForm","import React from \"react\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport classes from './Dialogs.module.css';\nimport DialogReduxForm from \"./DialogForm/DialogForm\";\n\nconst Dialogs = ({ sendMessage, dialogs, messages}) => {\n    return (\n        <div className={classes.dialogs}>\n            <div className={classes.dialogsItems}>\n                {dialogs.map(dialog=>{\n                    const {id, name} = dialog;\n                    return <DialogItem id={id} key={id} name={name}/>\n                })}\n            </div>\n            <div className={classes.messages}>\n                {messages.map(message => <Message\n                    key={message.id}\n                    id={message.id}\n                    message={message.message}\n                    userId={message.userId}\n                />)}\n            </div>\n            <DialogReduxForm onSubmit={(data)=>{\n                sendMessage(data.message)\n                data.message=''\n            }} />\n        </div>\n    )\n}\n\nexport default Dialogs;","export const getMessagesSelector = state => state.dialogsPage.messagesArr;\nexport const getDialogsSelector = state => state.dialogsPage.dialogsArr;\nexport const getCurrentMessageSelector = state => state.dialogsPage.currentMessage;\n\n","import Dialogs from \"./Dialogs\";\nimport { changeNewMessageActionCreator, sendMessageActionCreator } from \"../../Redux/dialogs-reducer\";\nimport { connect } from \"react-redux\";\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\nimport { compose } from \"redux\";\nimport { getCurrentMessageSelector, getDialogsSelector, getMessagesSelector } from \"../../Redux/dialogs-selectors\";\n\nconst mapStateToProps = (state) => (\n    {\n        messages: getMessagesSelector(state),\n        dialogs: getDialogsSelector(state),\n        currentMessage: getCurrentMessageSelector(state),\n    }\n)\n\nconst mapDispatchToProps = (dispatch) => (\n    {\n        sendMessage: (message) => {\n            dispatch(sendMessageActionCreator(message));\n            dispatch(changeNewMessageActionCreator(''));\n        },\n\n        changeMessage: (text) => {\n            dispatch(changeNewMessageActionCreator(text))\n        }\n    }\n)\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n)(Dialogs);\n"],"sourceRoot":""}