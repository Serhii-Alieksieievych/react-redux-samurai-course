{"version":3,"sources":["hoc/withAuthRedirect.jsx","components/common/CustomForms/CustomForms.tsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","utils/validators/validator.js","components/common/CustomForms/CustomForms.module.css","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","components/Login/Login.module.css","components/Login/Login.jsx"],"names":["withAuthRedirect","Component","connect","state","userId","auth","id","props","replace","to","withBackAuthRedirect","CustomField","input","meta","hasError","error","touched","className","classes","textareaWrapper","type","Input","Textarea","textarea","_objectWithoutProperties","source","excluded","key","i","target","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call","requiredField","value","undefined","maxLengthCreator","maxLength","module","exports","_objectWithoutPropertiesLoose","sourceKeys","keys","LoginForm","onSubmit","validate","handleSubmit","values","action","loginForm","name","component","placeholder","captchaUrl","src","alt","errorMessage","JSON","stringify","compose","hadErr","loginTC","useState","setErrorMessage","login","formData","then","err"],"mappings":"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","file":"static/js/7.e10d222d.chunk.js","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Navigate } from \"react-router-dom\";\n\nexport const withAuthRedirect = (Component) => {\n    const mapStateToProps = (state) => ({\n        userId: state.auth.id,\n    })\n\n    return connect(mapStateToProps)((props) => {\n        if (!props.userId) return <Navigate replace to=\"/../login\" />\n        return <Component {...props} />\n    })\n}\n\nexport const withBackAuthRedirect = (Component) => {\n    const mapStateToProps = (state) => ({\n        userId: state.auth.id,\n    })\n\n    return connect(mapStateToProps)((props) => {\n        if (props.userId) return <Navigate replace to=\"/../profile/me\" />\n        return <Component {...props} />\n    })\n}","import React from \"react\";\nimport classes from \"./CustomForms.module.css\";\n\nexport const CustomField = ({ input, meta, ...props } :any) => {\n    const hasError = meta.error && meta.touched\n    return (\n        <div className={`${classes.textareaWrapper} ${hasError && classes.error}`}>\n            {input.type\n                ? <Input {...input} {...props} />\n                : <Textarea  {...input} {...props} />\n            }\n            <div>{hasError && <span>{meta.error}</span>}</div>\n        </div>\n    )\n}\n\nconst Textarea = (props :any) => (\n    <textarea {...props} className={classes.textarea}></textarea>\n)\n\nconst Input = (props :any) => (\n    <input {...props} className={classes.input}/>\n)","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}"," export const requiredField = value => {\n    return value ? undefined : \"Field is required\";\n}\n\nexport const maxLengthCreator = maxLength => value => {\n    if (value) return value.length <= maxLength ? undefined : `Max lenhgth is ${maxLength}`\n    return undefined\n}\n\nexport const minLengthCreator = minLength => value => {\n    if (value) return value.length >= minLength ? undefined : `Min lenhgth is ${minLength}`\n    return undefined\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"CustomForms_error__1i_LA\",\"textarea\":\"CustomForms_textarea__24t2G\",\"input\":\"CustomForms_input__2n7gA\"};","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__2Px22\",\"loginForm\":\"Login_loginForm__1Hg13\",\"error\":\"Login_error__17Wu6\",\"errorMessage\":\"Login_errorMessage__1EjD8\"};","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { Form, Field } from 'react-final-form'\nimport { withBackAuthRedirect } from \"../../hoc/withAuthRedirect\";\nimport { loginTC } from \"../../Redux/auth-reducer\";\nimport { requiredField } from \"../../utils/validators/validator\";\nimport { CustomField } from \"../common/CustomForms/CustomForms\";\nimport classes from \"./Login.module.css\";\nimport { useState } from \"react\";\n\nconst LoginForm = (props) => {\n    return (\n        <Form\n            onSubmit={props.onSubmit}\n            validate={requiredField}\n        >\n            {({ handleSubmit, error, values })=>(\n                <form action=\"\" className={classes.loginForm} onSubmit={handleSubmit}>\n                    <div name=\"wrapper\" className={error && classes.error}>\n                        <Field\n                            component={CustomField}\n                            validate={requiredField}\n                            name=\"input\"\n                            type=\"text\"\n                            placeholder=\"login\"\n                        />\n                        <Field\n                            component={CustomField}\n                            validate={requiredField}\n                            name=\"password\"\n                            type=\"password\"\n                            placeholder=\"password\"\n                        />\n                        <div>\n                            <Field\n                                component=\"input\"\n                                name=\"rememberMe\"\n                                type=\"checkbox\"\n                            />\n                            <span>\n                                Запомнить меня\n                            </span>\n                        </div>\n                        {props.captchaUrl\n                            && <div>\n                                <img src={props.captchaUrl} alt=\"captcha\" />\n                                <Field\n                                    component={CustomField}\n                                    name=\"captcha\"\n                                    type=\"text\"\n                                    placeholder=\"captcha\"\n                                />\n                            </div>}\n                        <button>Log in</button>\n                        <div className={classes.errorMessage}>{error}</div>\n                    </div>\n                    <pre>{JSON.stringify(values)}</pre>\n                </form>\n            )}\n        </Form>\n    )\n}\n\n//const LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)\n\nconst Login = ({ loginTC, userId, hadErr, captchaUrl }) => {\n    const[errorMessage, setErrorMessage] = useState('')\n\n    const onSubmit = (formData) => {\n        setErrorMessage('')\n        if (!userId)loginTC(formData).then(\n            err => {\n                setErrorMessage(err)\n            }\n        )\n    }\n    return (\n        <div className={classes.login}>\n            <h1>Login</h1>\n            <LoginForm onSubmit={onSubmit} captchaUrl={captchaUrl} />\n            {hadErr && <h2>{errorMessage}</h2>}\n        </div>\n    )\n}\nconst mapStateToProps = (state) => ({\n    userId: state.auth.id,\n    hadErr: state.auth.hadErr,\n    captchaUrl: state.auth.captchaUrl,\n})\nexport default compose(withBackAuthRedirect, connect(mapStateToProps, { loginTC }))(Login);"],"sourceRoot":""}