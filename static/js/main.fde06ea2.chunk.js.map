{"version":3,"sources":["Redux/auth-reducer.ts","reportWebVitals.js","Redux/redux-store.ts","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","components/Navbar/Navbar.tsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","App.js","index.js","components/Header/Header.module.css","Redux/dialogs-reducer.ts","components/common/Preloader/Preloader.tsx","Redux/profile-reducer.ts","Redux/users-reducer.ts","api/api.js","assets/img/Opossums.jpg","components/common/Preloader/Preloader.module.css","components/Navbar/Navbar.module.css"],"names":["SET_AUTH","SET_SMALL_AVATAR","TOGGLE_IS_FETCHING","LOGIN","HAD_ERR","LOGOUT","RESET_AUTH","SET_CAPTCHA_URL","setCaptchaUrl","captchaUrl","type","setAuthUserData","isLogged","id","email","login","data","setSmallAvatar","smallAvatarSRC","toggleIsFetching","isFetching","loginTC","formData","dispatch","a","AuthAPI","response","resultCode","userId","checkAutorization","getCaptchaUrl","payload","messages","securityAPI","url","logoutTC","logoutAxios","getAuthStatus","then","ProfileAPI","getProfileData","photos","small","initialState","hadErr","authReducer","state","action","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","usersPage","usersReducer","profilePage","profileReducer","dialogsPage","dialogsReducer","auth","form","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Header","className","classes","header","src","alt","Preloader","ava","userPhoto","onClick","to","HeaderContainer","this","props","React","Component","connect","Navbar","nav","item","link","News","Music","Settings","DialogsContainer","lazy","ProfileContainer","UsersContainer","Login","navigate","useNavigate","useState","isRedirectedToLogin","setIsRedirectedToLogin","isInicialized","setIsInicialized","useEffect","fallback","path","element","ReactDOM","render","StrictMode","document","getElementById","module","exports","CHANGE_NEW_MESSAGE","REFRESH_DIALOGS","REFRESH_MESSAGES","SET_CURRENT_DIALOG","changeNewMessage","text","dialogs","currentDialog","hasNewMessages","lastDialogActivityDate","lastUserActivityDate","newMessagesCount","large","userName","current–°ollocutorsName","currentMessage","items","totalCount","error","refreshDialogs","dialogsApi","getDialogs","startNewDialogFromUsersPage","startChattngWithUser","find","dialog","setCurrentDialog","refreshMessages","getMessages","sendMessage","preloader","version","xmlns","x","y","viewBox","fill","d","attributeName","attributeType","dur","from","repeatCount","CHANGE_POST","ADD_POST","SET_PROFILE_INFO","SET_STATUS","TOGGLE_FETCHING","setStatus","status","addPost","changePost","updateProfileInfo","profileInfo","setProfileData","setProfile","sendProfilePhoto","photo","sendPhoto","getStatus","updateStatus","currentPostArea","postsArr","message","likesCount","newPost","length","FOLLOW","UNFOLLOW","SET_STATE","SET_CURRENT_PAGE","TOGGLE_FETCHING_STATUS","TOGGLE_FOLLOWING_STATUS","setState","users","setCurrentPage","page","currentPage","toggleFollowingStatus","getUsers","UsersAPI","followTC","user","FollowAPI","followAxios","unfollowTC","unfollowAxios","pageSize","haveFollowingInProgress","map","followed","some","filter","instance","axios","create","withCredentials","baseURL","headers","get","post","delete","resp","put","FormData","append","input","password","rememberMe","captcha","body"],"mappings":"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","file":"static/js/main.fde06ea2.chunk.js","sourcesContent":["import { AuthAPI, ProfileAPI, securityAPI } from \"../api/api\";\n\nconst SET_AUTH = 'SET_AUTH';\nconst SET_SMALL_AVATAR = 'SET_SMALL_AVATAR';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst LOGIN = 'LOGIN';\nconst HAD_ERR = 'HAD_ERR';\nconst LOGOUT = 'LOGOUT';\nconst RESET_AUTH = \"RESET_AUTH\";\nconst SET_CAPTCHA_URL = \"SET_CAPTCHA_URL\"\n\nexport type AuthInitialStateType = {\n    id: number | null,\n    email: string | null,\n    login: string | null,\n    smallAvatarSRC: string | null,\n    isLogged: boolean,\n    isFetching: boolean,\n    captchaUrl: string | null,\n    hadErr: boolean,\n    userId: null | number\n}\ntype SetCaptchaUrlType = {\n    type: typeof SET_CAPTCHA_URL,\n    captchaUrl: string\n}\ntype LoginType = { type: typeof LOGIN, userId: number }\ntype LogoutType = { type: typeof LOGOUT }\ntype HadErrType = { type: typeof HAD_ERR, payload: any }\ntype AuthUserDataType = {\n    isLogged: boolean,\n    id: null | number,\n    email: null | string,\n    login: null | string,\n}\ntype ResetAuthUserDataType = {\n    type: typeof RESET_AUTH,\n    data: AuthUserDataType,\n}\ntype SetAuthUserDataType = {\n    type: typeof SET_AUTH,\n    data: AuthUserDataType,\n}\ntype SetSmallAvatarType = {\n    type: typeof SET_SMALL_AVATAR,\n    data: {\n        smallAvatarSRC: string,\n    }\n}\ntype TogleIsFetchingType = {\n    type: typeof TOGGLE_IS_FETCHING,\n    data: {\n        isFetching: boolean,\n    }\n}\n\nconst setCaptchaUrl = (captchaUrl :string) :SetCaptchaUrlType => ({type: SET_CAPTCHA_URL, captchaUrl})\nexport const login = (userId :number) :LoginType => ({type: LOGIN, userId})\nexport const logout = () :LogoutType => ({ type: LOGOUT })\nconst hadErr = (payload :any) :HadErrType=> ({type: HAD_ERR, payload})\nconst resetAuthUserData = () :ResetAuthUserDataType => ({\n    type: RESET_AUTH,\n    data: {\n        isLogged: false,\n        id: null,\n        email: null,\n        login: null,\n    }\n})\nexport const setAuthUserData = (\n    isLogged: boolean,\n    id: number,\n    email: string,\n    login: string\n) :SetAuthUserDataType => ({\n    type: SET_AUTH,\n    data: {\n        isLogged,\n        id,\n        email,\n        login\n    }\n})\nexport const setSmallAvatar = (smallAvatarSRC: string) :SetSmallAvatarType => ({\n    type: SET_SMALL_AVATAR,\n    data: {\n        smallAvatarSRC,\n    }\n})\nexport const toggleIsFetching = (isFetching: boolean) :TogleIsFetchingType => ({\n    type: TOGGLE_IS_FETCHING,\n    data: {\n        isFetching,\n    }\n})\n\n\nexport const loginTC = (formData :any) => async (dispatch :any)=> {\n    const response = await AuthAPI.login(formData)\n    if (response.data.resultCode === 0) {\n        dispatch(login(response.data.data.userId))\n        const data = await response.data;\n        dispatch(checkAutorization())\n    } else if (response.data.resultCode === 10){\n        dispatch(getCaptchaUrl())\n    } else {\n        dispatch(hadErr(null))\n        return response.data.messages[0]\n    }\n}\nexport const getCaptchaUrl = () => async (dispatch :any) => {\n    const data = await securityAPI.getCaptchaUrl();\n    const captchaUrl = data.url;\n    dispatch(setCaptchaUrl(captchaUrl))\n}\nexport const logoutTC = () => async (dispatch : any) => {\n    const data = await AuthAPI.logoutAxios()\n    dispatch(resetAuthUserData())\n}\nexport const checkAutorization = () => (dispatch :any) => {\n    return AuthAPI.getAuthStatus().then(data => {\n        const isLogged = data.resultCode === 0 ? true : false;\n        const { id, login, email } = data.data;\n        if (isLogged) dispatch(setAuthUserData(isLogged, id, email, login))\n        return id;\n    }).then(id => {\n        ProfileAPI.getProfileData(id).then(data => {\n            dispatch(setSmallAvatar(data.photos.small))\n            dispatch(toggleIsFetching(false))\n        })\n    })\n}\n\nconst initialState : AuthInitialStateType = {\n    id: null,\n    email: null,\n    login: null,\n    smallAvatarSRC: null,\n    isLogged: false,\n    isFetching: false,\n    captchaUrl: null,\n    hadErr: false,\n    userId: null,\n}\n\nconst authReducer = (state: AuthInitialStateType = initialState, action :any): AuthInitialStateType => {\n    switch (action.type) {\n        case SET_AUTH:\n            return {...state, ...action.data};\n        case RESET_AUTH:\n            return { ...state, ...action.data };\n        case TOGGLE_IS_FETCHING:\n            return {...state, ...action.data}\n        case SET_SMALL_AVATAR:\n            return { ...state, ...action.data };\n        case LOGIN:\n            return { ...state, userId: action.userId, hadErr: false }\n        case LOGOUT:\n            return { ...state, userId: null }\n        case HAD_ERR:\n            return { ...state, hadErr: true }\n        case SET_CAPTCHA_URL:\n            return { ...state, captchaUrl: action.captchaUrl}\n        default:\n            return state;\n    }\n}\n\nexport default authReducer;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { applyMiddleware, combineReducers, createStore, compose } from 'redux';\nimport profileReducer from './profile-reducer';\nimport dialogsReducer from './dialogs-reducer';\nimport usersReducer from './users-reducer';\nimport authReducer from './auth-reducer';\nimport { reducer as formReducer } from 'redux-form';\nimport thunkMiddleware from 'redux-thunk';\n\nlet rootReducer = combineReducers({\n    usersPage: usersReducer,\n    profilePage: profileReducer,\n    dialogsPage: dialogsReducer,\n    auth: authReducer,\n    form: formReducer,\n})\n\ntype RootReducerType = typeof rootReducer;\nexport type AppStateType = ReturnType<RootReducerType>\n\n// @ts-ignore\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)));\n\nexport default store;","import React from \"react\";\nimport classes from './Header.module.css';\nimport userPhoto from \"../../assets/img/Opossums.jpg\";\nimport { Link } from \"react-router-dom\";\nimport Preloader from \"../common/Preloader/Preloader\";\n\ntype PropsType = {\n    email: string | null,\n    id: number | null,\n    smallAvatarSRC: string | null,\n    isFetching: boolean,\n    logoutTC: ()=>void\n}\n\nconst Header :React.FC<PropsType> = ({ email, id, smallAvatarSRC, isFetching, logoutTC }) => {\n    return (\n        <header className={classes.header}>\n            <img src=\"https://key0.cc/images/preview/83810_9affe954e1ae5d956f374d1a3526e6fc.png\" alt=\"logo\" className=\"logo\" />\n            {isFetching ? <Preloader /> : id\n                ? <div>\n                    {smallAvatarSRC\n                        ? <img src={smallAvatarSRC} alt=\"small_avatar\" className={classes.ava} />\n                        : <img src={userPhoto} alt=\"small_avatar\" className={classes.ava} />}\n                    {email} You are logged {id}\n                    <button onClick={() => { logoutTC() }}>Log out</button>\n                </div>\n                : <Link to=\"login\">Log in</Link>}\n        </header>\n    )\n}\n\nexport default Header;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n    setAuthUserData,\n    setSmallAvatar,\n    toggleIsFetching,\n    logoutTC,\n    AuthInitialStateType,\n} from \"../../Redux/auth-reducer\";\nimport Header from \"./Header\";\nimport { checkAutorization } from \"../../Redux/auth-reducer\";\nimport { AppStateType } from \"../../Redux/redux-store\";\n\ntype HeaderContainerPropsTypes = {\n    toggleIsFetching: (isFetching: boolean) => void;\n    checkAutorization: () => void;\n    setAuthUserData: (\n        isLogged: boolean,\n        id: number,\n        email: string,\n        login: string\n    ) => any,\n    setSmallAvatar: (smallAvatarSRC: string) => any,\n    logoutTC: () => Promise<void>,\n    email: string | null,\n    id: number | null,\n    smallAvatarSRC: string | null,\n    isFetching: boolean,\n}\n\nclass HeaderContainer extends React.Component<HeaderContainerPropsTypes>{\n    componentDidMount(){\n        this.props.toggleIsFetching(true)\n        this.props.checkAutorization()\n    }\n    render(){\n        return(\n            <Header \n                email = {this.props.email}\n                id = {this.props.id}\n                smallAvatarSRC = {this.props.smallAvatarSRC}\n                isFetching = {this.props.isFetching}\n                logoutTC = {this.props.logoutTC}      \n            />\n        )\n    }\n}\nconst mapStateToProps = (state: AppStateType) :AuthInitialStateType => (\n    {...state.auth}\n)\n    \n\nexport default connect(mapStateToProps,\n    {\n        setAuthUserData,\n        setSmallAvatar,\n        toggleIsFetching,\n        checkAutorization,\n        logoutTC,\n    }\n)(HeaderContainer);","import React from \"react\";\nimport classes from \"./Navbar.module.css\";\nimport { Link } from \"react-router-dom\";\n\nconst Navbar = () => {\n    return (\n        <nav className={classes.nav}>\n            <div className={classes.item}>\n                <Link\n                    to=\"profile/me\"\n                    className={classes.link}\n                >\n                    Profile\n                </Link>\n            </div>\n            <div className={classes.item}>\n                <Link\n                    to=\"dialogs\"\n                    className={classes.link}\n                >\n                    Dialogs\n                </Link>\n            </div>\n            <div className={classes.item}>\n                <Link\n                    to=\"news\"\n                    className={classes.link}\n                >\n                    News\n                </Link>\n            </div>\n            <div className={classes.item}>\n                <Link\n                    to=\"music\"\n                    className={classes.link}\n                >\n                    Music\n                </Link>\n            </div>\n            <div className={classes.item}>\n                <Link\n                    to=\"users\"\n                    className={classes.link}\n                >\n                    Users\n                </Link>\n            </div>\n            <div className={classes.item}>\n                <Link\n                    to=\"settings\"\n                    className={classes.link}\n                >\n                    Settings\n                </Link>\n            </div>\n        </nav>\n    )\n}\n\nexport default Navbar;","import React from \"react\";\nimport classes from './News.module.css';\n\nconst News = () => {\n    return (\n        <div>\n            News\n        </div>\n    )\n}\n\nexport default News;","import React from \"react\";\nimport classes from './Music.module.css';\n\nconst Music = () => {\n    return (\n        <div>\n            Music\n        </div>\n    )\n}\n\nexport default Music;","import React from \"react\";\nimport classes from './Settings.module.css';\n\nconst Settings = () => {\n    return (\n        <div>\n            Settings\n        </div>\n    )\n}\n\nexport default Settings;","import React, { Suspense, lazy } from 'react';\nimport { Routes, Route, useNavigate } from 'react-router-dom';\n\nimport './App.css';\n\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Navbar from './components/Navbar/Navbar';\nimport News from './components/News/News';\nimport Music from './components/Music/Music';\nimport Settings from './components/Settings/Settings';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { Grid } from 'svg-loaders-react';\nimport { checkAutorization } from './Redux/auth-reducer';\nimport { connect } from 'react-redux';\nconst DialogsContainer = lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = lazy(() => import('./components/Profile/ProfileContainer'));\nconst UsersContainer = lazy(() => import('./components/Users/UsersContainer'));\nconst Login = lazy(() => import('./components/Login/Login'));\n\nconst App = ({ checkAutorization, userId }) => {\n  const navigate = useNavigate();\n  const [isRedirectedToLogin, setIsRedirectedToLogin] = useState(false);\n  const [isInicialized, setIsInicialized] = useState(false)\n  useEffect(() => {\n    checkAutorization().then(() => {\n      setIsInicialized(true)\n    })\n  }, [userId])\n  if (!isInicialized) return <div className=\"appPreloader\" ><Grid /></div>\n  if (isInicialized && !userId && !isRedirectedToLogin) {\n    setIsRedirectedToLogin(true)\n    navigate(\"/login\")\n  }\n  return (\n    <div className=\"app-wrapper\">\n      <HeaderContainer />\n      <Navbar />\n      <div className=\"app-wrapper-content\">\n        <Suspense fallback={<Grid />}>\n        <Routes>\n          <Route\n            path=\"profile\"\n          >\n            <Route\n              path=\":userId\"\n              element={\n                <ProfileContainer />\n              }\n            />\n            <Route\n              path=\"me\"\n              element={\n                <ProfileContainer />\n              }\n            />\n          </Route>\n            <Route\n              path=\"/dialogs\"\n              element={\n                <DialogsContainer />\n              }\n            />\n          <Route\n            path=\"/users\"\n            element={\n              <UsersContainer />\n            }\n          />\n          <Route path=\"/news\" element={<News />} />\n          <Route path=\"/music\" element={<Music />} />\n          <Route path=\"/settings\" element={<Settings />} />\n          <Route path=\"/login\" element={<Login />} />\n        </Routes>\n        </Suspense>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  userId: state.auth.id,\n})\n\nexport default connect(mapStateToProps, { checkAutorization })(App);\n","import './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport store from './Redux/redux-store';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n    <React.StrictMode>\n    <BrowserRouter /*</React.StrictMode>basename={process.env.PUBLIC_URL}*/>\n        <Provider store={store}>\n          <App />\n        </Provider>\n      </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);      \n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"preloader\":\"Header_preloader__2pZ6N\",\"ava\":\"Header_ava__1jVPU\"};","import { Dispatch } from \"redux\";\nimport { dialogsApi } from \"../api/api\";\n\nconst CHANGE_NEW_MESSAGE = 'CHANGE-NEW-MESSAGE';\nconst REFRESH_DIALOGS = 'REFRESH-DIALOGS';\nconst REFRESH_MESSAGES = 'REFRESH-MESSAGES';\nconst SET_CURRENT_DIALOG = 'SET-COLLOCUTORS-INFO';\n\ntype ChangeNewMessageType = { type: typeof CHANGE_NEW_MESSAGE, text: string }\ntype RefreshDialogsType = { type: typeof REFRESH_DIALOGS, dialogs: Array<DialogType> }\nexport type DialogType = {\n    hasNewMessages: boolean,\n    id: number,\n    lastDialogActivityDate: string,\n    lastUserActivityDate: string,\n    newMessagesCount: number,\n    photos?:{\n        small?:string,\n        large?:string,\n    },\n    userName: string,\n}\ntype InitialStateType = typeof initialState;\n\nexport const changeNewMessage = (text: string) :ChangeNewMessageType => (\n    { type: CHANGE_NEW_MESSAGE, text }\n)\n\nconst initialState = {\n    dialogs: [] as Array<DialogType>,\n    currentDialog: {\n        hasNewMessages: false,\n        id: 1,\n        lastDialogActivityDate: 'string',\n        lastUserActivityDate: 'string',\n        newMessagesCount: 0,\n        photos: {\n            small: 'string',\n            large: 'string',\n        },\n        userName: 'opps',\n    },\n    current–°ollocutorsName: null,\n    currentMessage: '',\n    messages: { items: [], totalCount: 0, error: null },\n};\n\nexport const refreshDialogs = () :any => async (dispatch: Dispatch):Promise<void> => {\n    let data = await dialogsApi.getDialogs()\n    dispatch({type: REFRESH_DIALOGS, dialogs: data})\n}\n\nexport const startNewDialogFromUsersPage = (id: number) => async (dispatch: Dispatch): Promise<void> => {\n    await dialogsApi.startChattngWithUser(id)\n    let data = await dialogsApi.getDialogs()\n    let dialog = await data.find((dialog: DialogType)=> dialog.id === id)\n    dispatch(setCurrentDialog(dialog))\n    dispatch(refreshDialogs())\n}\n\nexport const refreshMessages = (dialog: DialogType) : any => async (dispatch: Dispatch):Promise<void> => {\n    dispatch(setCurrentDialog(dialog))\n    let data = await dialogsApi.getMessages(dialog.id)\n    await dispatch({type: REFRESH_MESSAGES, messages: data})\n    let data2 = await dialogsApi.startChattngWithUser(dialog.id)// Create 429error\n    dispatch(refreshDialogs())\n}\n\nexport const sendMessage = (payload: [DialogType, string]) => async (dispatch:Dispatch) => {\n    let data = await dialogsApi.sendMessage(payload[0].id, payload[1])\n    dispatch(refreshMessages(payload[0]))\n}\n\nexport const setCurrentDialog=(dialog:DialogType|null)=> {\n    return {type: SET_CURRENT_DIALOG, dialog}\n}\nconst dialogsReducer = (state :InitialStateType = initialState, action: any) :InitialStateType => {\n    switch (action.type) {\n        case REFRESH_DIALOGS:\n            return {...state, dialogs: action.dialogs}\n        case REFRESH_MESSAGES:\n            return {...state, messages: action.messages}\n        case CHANGE_NEW_MESSAGE:\n            return {...state, currentMessage: action.text};\n        case SET_CURRENT_DIALOG:\n            return {...state, currentDialog: action.dialog}\n        default: \n            return state;\n    }\n}\n\nexport default dialogsReducer;","import classes from \"./Preloader.module.css\"\n\nconst Preloader = () => {\n    return (\n        <div className={classes.preloader}>\n            <svg version=\"1.1\" id=\"L7\" xmlns=\"http://www.w3.org/2000/svg\"  x=\"0px\" y=\"0px\"\n                viewBox=\"0 0 100 100\" enable-background=\"new 0 0 100 100\" >\n                <path fill=\"#fff\" d=\"M31.6,3.5C5.9,13.6-6.6,42.7,3.5,68.4c10.1,25.7,39.2,38.3,64.9,28.1l-3.1-7.9c-21.3,8.4-45.4-2-53.8-23.3\n  c-8.4-21.3,2-45.4,23.3-53.8L31.6,3.5z\">\n                    <animateTransform\n                        attributeName=\"transform\"\n                        attributeType=\"XML\"\n                        type=\"rotate\"\n                        dur=\"2s\"\n                        from=\"0 50 50\"\n                        to=\"360 50 50\"\n                        repeatCount=\"indefinite\" />\n                </path>\n                <path fill=\"#fff\" d=\"M42.3,39.6c5.7-4.3,13.9-3.1,18.1,2.7c4.3,5.7,3.1,13.9-2.7,18.1l4.1,5.5c8.8-6.5,10.6-19,4.1-27.7\n  c-6.5-8.8-19-10.6-27.7-4.1L42.3,39.6z\">\n                    <animateTransform\n                        attributeName=\"transform\"\n                        attributeType=\"XML\"\n                        type=\"rotate\"\n                        dur=\"1s\"\n                        from=\"0 50 50\"\n                        to=\"-360 50 50\"\n                        repeatCount=\"indefinite\" />\n                </path>\n                <path fill=\"#fff\" d=\"M82,35.7C74.1,18,53.4,10.1,35.7,18S10.1,46.6,18,64.3l7.6-3.4c-6-13.5,0-29.3,13.5-35.3s29.3,0,35.3,13.5\n  L82,35.7z\">\n                    <animateTransform\n                        attributeName=\"transform\"\n                        attributeType=\"XML\"\n                        type=\"rotate\"\n                        dur=\"2s\"\n                        from=\"0 50 50\"\n                        to=\"360 50 50\"\n                        repeatCount=\"indefinite\" />\n                </path>\n            </svg>\n        </div>\n    )\n}\n\nexport default Preloader;","import { ProfileAPI } from \"../api/api\";\n\nconst CHANGE_POST = 'CHANGE-POST';\nconst ADD_POST = 'ADD-POST';\nconst SET_PROFILE_INFO = 'SET_PROFILE_INFO';\nconst SET_STATUS = 'SET_STATUS';\nconst TOGGLE_FETCHING = 'TOGGLE_FETCHING';\n\ntype SetStatusType = {type: typeof SET_STATUS, status: string}\ntype IsFetchingType = { type: typeof TOGGLE_FETCHING, isFetching: boolean}\ntype AddPostType = { type : typeof ADD_POST, text: string }\ntype ChangePostType = { type : typeof CHANGE_POST, text: string }\ntype ProfileInfoType = {\n    userId: number,\n    lookingForAJob: boolean,\n    lookingForAJobDescription: string,\n    fullName: string,\n    contacts: {\n        github: string,\n        vk: string,\n        facebook: string,\n        instagram: string,\n        twitter: string,\n        website: string,\n        youtube: string,\n        mainLink: string,\n        photos: {\n            small: (string | null),\n            large: (string | null)\n        }\n    }\n}\ntype SetProfileInfoType = { type: typeof SET_PROFILE_INFO, profileInfo: ProfileInfoType }\nexport const setStatus = (status: string) :SetStatusType => ({type: SET_STATUS, status})\nexport const toggleFetching = (isFetching: boolean) :IsFetchingType => ({ type: TOGGLE_FETCHING, isFetching })\nexport const addPost = (text: string) :AddPostType => ({ type: ADD_POST, text })\nexport const changePost = (text: string) : ChangePostType=> ({\n    type: CHANGE_POST,\n    text: text,\n})\nexport const setProfileInfo = (profileInfo :ProfileInfoType) => ({type: SET_PROFILE_INFO, profileInfo})\n\nexport const updateProfileInfo = (profileInfo: ProfileInfoType) => async (dispatch :any)=> {\n    const response = await ProfileAPI.setProfileData(profileInfo)\n    dispatch(setProfile(null))\n}\n\nexport const sendProfilePhoto = (photo : string) => {\n    return async (dispatch: any) => {\n        const response = await ProfileAPI.sendPhoto(photo);\n        dispatch(setProfile(21473))\n    }\n}\n\nexport const setProfile = (id: number | null) => async (dispatch: any) => {\n    dispatch(toggleFetching(true))\n    const userId = id ? id : 21473;\n    const data = await ProfileAPI.getProfileData(userId)\n    dispatch(setProfileInfo(data))\n}\n\nexport const getStatus = (id : number | null) => async (dispatch: any) => {\n    const userId = id ? id : 21473;\n    const data = await ProfileAPI.getStatus(userId)\n        dispatch(setStatus(data))\n}\n\nexport const updateStatus = (status: string) => async (dispatch: any) => {\n    const data = await ProfileAPI.updateStatus(status)\n    if (!data.resultCode) {\n    dispatch(setStatus(status))\n    }\n}\n\n\nconst initialState = {\n    currentPostArea: '',\n    profileInfo: {\n        isFetching: false,\n        data: null,\n    },\n    status: '',\n    postsArr: [\n        { id: 1, message: `post-opost`, likesCount: 0 },\n        { id: 2, message: `post-pos`, likesCount: 0 },\n        { id: 3, message: `post-opos`, likesCount: 0 },\n    ],\n}\n\nconst profileReducer = (state = initialState, action: any) => {\n    switch (action.type) {\n        case ADD_POST:\n            let newPost = {\n                id: state.postsArr.length + 1,\n                message: action.text,\n                likesCount: 0,\n            }\n            return {...state, postsArr: [...state.postsArr, newPost], currentPostArea: ''};\n        case CHANGE_POST:\n            return {...state, currentPostArea: action.text};\n        case SET_PROFILE_INFO:\n            return { ...state, profileInfo: { ...state.profileInfo, data: action.profileInfo, isFetching: false}};\n        case SET_STATUS:\n            return {...state, status: action.status};\n        case TOGGLE_FETCHING:\n            return { ...state, profileInfo: { ...state.profileInfo, isFetching: action.isFetching}};\n        default:\n            return state;\n    }\n}\n\nexport default profileReducer;","import { UsersAPI, FollowAPI } from \"../api/api\";\nimport { UserType, SetCurrentPageType, ToggleFollowingStatusType } from \"../types/UsersTypes\";\n\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_STATE = 'SET-STATE';\nexport const SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst TOGGLE_FETCHING_STATUS = 'TOGGLE_FETCHING_STATUS';\nexport const TOGGLE_FOLLOWING_STATUS = 'TOGGLE_FOLLOWING_STATUS'\n\ntype InitialStateType = {\n    users: Array<UserType>,\n    totalCount: number,\n    pageSize: number,\n    currentPage: number,\n    isFetching: boolean,\n    haveFollowingInProgress: Array<number>,\n}\n\ntype ActionsTypes = FollowType | UnfollowType | SetStateType\n    | ToggleIsFetchingType | ToggleFollowingStatusType | SetCurrentPageType\n\ntype FollowType = { type: typeof FOLLOW, id: number }\ntype UnfollowType = { type: typeof UNFOLLOW, id: number }\ntype SetStateType = { type: typeof SET_STATE, users: Array<UserType>, totalCount: number }\ntype ToggleIsFetchingType = { type: typeof TOGGLE_FETCHING_STATUS, isFetching: boolean }\n\nexport const follow = (id: number) :FollowType => ({ type: FOLLOW, id: id })\nexport const unfollow = (id: number) :UnfollowType => ({ type: UNFOLLOW, id: id })\nexport const setState = (users: Array<UserType>, totalCount: number) :SetStateType=> (\n    { type: SET_STATE, users, totalCount }\n)\nexport const setCurrentPage = (page: number) :SetCurrentPageType => ({ type: SET_CURRENT_PAGE, currentPage: page })\nexport const toggleIsFetching = (isFetching: boolean) :ToggleIsFetchingType => (\n    { type: TOGGLE_FETCHING_STATUS, isFetching }\n)\nexport const toggleFollowingStatus = (id: number) :ToggleFollowingStatusType => ({ type: TOGGLE_FOLLOWING_STATUS, id })\n\nexport const getUsers = (currentPage = 1) => async (dispatch: any) => {\n    dispatch(toggleIsFetching(true))\n    dispatch(setCurrentPage(currentPage))\n    const data = await UsersAPI.getUsers(currentPage)\n    dispatch(toggleIsFetching(false))\n    dispatch(setState(data.items, data.totalCount))\n};\nexport const followTC = (user: UserType) => async (dispatch: any) => {\n    dispatch(toggleFollowingStatus(user.id))\n    const data = await FollowAPI.followAxios(user)\n    if (data.resultCode === 0) {\n        dispatch(follow(user.id))\n    }\n    dispatch(toggleFollowingStatus(user.id))\n}\nexport const unfollowTC = (user: UserType) => async (dispatch: any) => {\n    dispatch(toggleFollowingStatus(user.id))\n    const data = await FollowAPI.unfollowAxios(user)\n    if (data.resultCode === 0) {\n        dispatch(unfollow(user.id))\n    }\n    dispatch(toggleFollowingStatus(user.id))\n}\n\nconst initialState = {\n    users: [],\n    totalCount: 0,\n    pageSize: 12,\n    currentPage: 1,\n    isFetching: false,\n    haveFollowingInProgress: [],\n}\n\nconst usersReducer = (state :InitialStateType = initialState, action: ActionsTypes) : InitialStateType => {\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state, users: state.users.map((user: UserType) :UserType => {\n                    return user.id === action.id\n                        ? { ...user, followed: true }\n                        : { ...user };\n                })\n            };\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: state.users.map((user: UserType): UserType => {\n                    return user.id === action.id\n                        ? { ...user, followed: false }\n                        : { ...user };\n                })\n            };\n\n        case SET_STATE:\n            return { ...state, users: [...action.users], totalCount: action.totalCount };\n        case SET_CURRENT_PAGE:\n            return { ...state, currentPage: action.currentPage }\n        case TOGGLE_FETCHING_STATUS:\n            return { ...state, isFetching: action.isFetching }\n        case TOGGLE_FOLLOWING_STATUS:\n            return state.haveFollowingInProgress.some((id :number) => id === action.id)\n                ? { ...state, haveFollowingInProgress: state.haveFollowingInProgress.filter(id => id !== action.id) }\n                : { ...state, haveFollowingInProgress: [...state.haveFollowingInProgress, action.id] }\n        default:\n            return state;\n    }\n}\n\nexport default usersReducer;","import axios from 'axios';\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\n    headers: {\n        'API-KEY': '2684d674-512e-42f2-86c1-036ed91abbce'\n    }\n})\n\nexport const UsersAPI = {\n    getUsers(currentPage = 1, pageSize = 12) {\n        return instance.get(\n            `users?page=${currentPage}&count=${pageSize}`,\n        ).then(response => response.data)\n    },\n}\n\nexport const FollowAPI = {\n    followAxios(user) {\n        return instance.post(\n            `follow/${user.id}`,\n            {},\n        ).then(response => response.data)\n    },\n\n    unfollowAxios(user) {\n        return instance.delete(\n            `follow/${user.id}`,\n        ).then(response => response.data)\n    }\n}\n\nexport const ProfileAPI = {\n    getProfileData(userId) {\n        userId = userId ? userId : 2\n        return (\n            instance.get(`/profile/${userId}`).then(resp => resp.data)\n        )\n    },\n    setProfileData(data) {\n        return (\n            instance.put(`/profile/`, data).then(resp => resp.data)\n        )\n    },\n    getStatus(userId) {\n        return (\n            instance.get(`/profile/status/${userId}`).then(resp => resp.data)\n        )\n    },\n    updateStatus(status) {\n        return (\n            instance.put(`/profile/status`, {\n                status: status,\n            }).then(resp => resp.data)\n        )\n    },\n    sendPhoto(photo) {\n        let formData = new FormData;\n        formData.append(\"image\", photo);\n        return(\n            instance.put(`/profile/photo`, formData).then(resp => resp.data)\n        )\n    }\n}\n\nexport const securityAPI = {\n    getCaptchaUrl(){\n        return(\n            instance.get('/security/get-captcha-url').then(resp => resp.data)\n        )\n    }\n}\n\nexport const AuthAPI = {\n    login({ input, password, rememberMe, captcha }) {\n        return instance.post(\n            `/auth/login`,\n            {\n                email: input,\n                password,\n                rememberMe,\n                captcha,\n            },\n        )\n    },\n\n    logoutAxios() {\n        return instance.delete(\n            `/auth/login`,\n        ).then(response => response.data)\n    },\n\n    getAuthStatus() {\n        return (\n            axios.get(`https://social-network.samuraijs.com/api/1.0/auth/me`, {\n                withCredentials: true\n            }).then(resp => resp.data)\n        )\n    }\n}\n export const dialogsApi = {\n    getDialogs: () => instance.get('/dialogs').then(resp => {\n        return resp.data\n    }),\n\n    getMessages(id){\n        return instance.get(`dialogs/${id}/messages`).then(resp => {\n            return resp.data\n        })\n    },\n    startChattngWithUser(id) {\n        return instance.put(`dialogs/${id}`,{userId: id}).then(resp=>resp.data)\n    },\n    sendMessage(id, message){\n        return instance.post(`dialogs/${id}/messages`,{body: message}).then(resp => {\n            return resp.data\n        })\n    },\n\n }\n","export default __webpack_public_path__ + \"static/media/Opossums.160979c6.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__2dvkO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2imOE\",\"item\":\"Navbar_item__zmMk4\",\"link\":\"Navbar_link__TNvz9\",\"activeLink\":\"Navbar_activeLink__3etBE\"};"],"sourceRoot":""}