{"version":3,"sources":["hoc/withAuthRedirect.jsx","components/Users/Users.module.css","components/common/Paginator/Paginator.module.css","components/common/Paginator/Paginator.tsx","components/Users/Users.tsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","Redux/users-selectors.ts","components/Users/UsersContainer.tsx"],"names":["withAuthRedirect","Component","connect","state","userId","auth","id","props","replace","to","withBackAuthRedirect","module","exports","Paginator","totalCount","pageSize","currentPage","getUsers","pagesCount","Math","ceil","pageSpans","partOfPageSpans","start","size","floor","end","i","push","className","classes","paginatorWrapper","onClick","map","span","activePaginator","Users","users","follow","unfollow","haveFollowingInProgress","startNewDialogFromUsersPage","usersWrapper","user","userCard","src","photos","small","userPhoto","avatar","alt","followed","disabled","some","btn","name","status","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","Object","assign","lastResult","recomputations","resetRecomputations","getUsersByReselectorSelector","usersPage","filter","getTotalUsersCountSelector","getPageSizeSelector","getCurrentPageSelector","getIsFetchingSelector","isFetching","getHaveFollowingInProgressSelector","UsersAPIComponent","this","followTC","unfollowTC","style","display","alignItems","justifyContent","height","Preloader","React","compose","setState","toggleIsFetching","toggleFollowingStatus"],"mappings":"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","file":"static/js/8.605143aa.chunk.js","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Navigate } from \"react-router-dom\";\n\nexport const withAuthRedirect = (Component) => {\n    const mapStateToProps = (state) => ({\n        userId: state.auth.id,\n    })\n\n    return connect(mapStateToProps)((props) => {\n        if (!props.userId) return <Navigate replace to=\"/../login\" />\n        return <Component {...props} />\n    })\n}\n\nexport const withBackAuthRedirect = (Component) => {\n    const mapStateToProps = (state) => ({\n        userId: state.auth.id,\n    })\n\n    return connect(mapStateToProps)((props) => {\n        if (props.userId) return <Navigate replace to=\"/../profile/me\" />\n        return <Component {...props} />\n    })\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Users_users__2Iv27\",\"usersWrapper\":\"Users_usersWrapper__2gv8N\",\"userCard\":\"Users_userCard__1SxsG\",\"avatar\":\"Users_avatar__gHOlh\",\"btn\":\"Users_btn__9AIH5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginatorWrapper\":\"Paginator_paginatorWrapper__1iDbY\",\"span\":\"Paginator_span__3LfMv\",\"activePaginator\":\"Paginator_activePaginator__kJd1m\"};","import React from \"react\";\nimport classes from './Paginator.module.css';\ntype PaginatorPropsType = {\n    totalCount :number,\n    pageSize :number,\n    currentPage :number,\n    getUsers: (currentPage: number) => void,\n}\n\nconst Paginator: React.FC<PaginatorPropsType> = ({\n    totalCount,\n    pageSize,\n    currentPage,\n    getUsers,\n}) => {\n    const pagesCount = Math.ceil(totalCount / pageSize);\n    const pageSpans = [];\n    let partOfPageSpans = [];\n    let size = 9\n    const start = currentPage < Math.ceil(size / 2)\n        ? 1\n        : currentPage + Math.floor(size / 2) > pagesCount\n            ? pagesCount - size + 1\n            : Math.ceil(currentPage - size / 2)\n    let end = start + size - 1;\n\n    for (let i = 1; i <= pagesCount; i++) {\n        pageSpans.push(i)\n        if (i >= start && i <= end) {\n            partOfPageSpans.push(i)\n        } \n    }\n\n    return (\n        <div className={classes.paginatorWrapper}>\n            <span onClick={() => {\n                getUsers(1)\n            }}>To start</span>\n            {(currentPage > 1) && <span onClick={() => {\n                getUsers(currentPage-1)\n            }}>Back</span>}\n            {partOfPageSpans.map(span => (\n                <span\n                    onClick={() => {\n                        getUsers(span)\n                    }}\n                    className={span === currentPage\n                        ? classes.activePaginator + ' ' + classes.span\n                        : classes.span}\n                    key={span}\n                >\n                    {span}\n                </span>\n            ))}\n           {currentPage < pagesCount && <span onClick={()=>{\n                getUsers(currentPage + 1)\n            }}>Forvard</span>}\n            <span onClick={() => {\n                getUsers(pagesCount)\n            }}>To end</span>\n        </div>\n    )\n}\n\nexport default Paginator;","import React from \"react\";\nimport classes from './Users.module.css';\nimport userPhoto from \"../../assets/img/Opossums.jpg\"\nimport { Link } from \"react-router-dom\";\nimport Paginator from \"../common/Paginator/Paginator\";\nimport { UserType } from \"../../types/UsersTypes\";\nimport { sendMessage } from \"../../Redux/dialogs-reducer\";\n\ntype UsersPropsType = {\n    users: Array<UserType>,\n    follow: (user: UserType) => void,\n    unfollow: (user: UserType) => void,\n    totalCount: number,\n    pageSize: number,\n    currentPage: number,\n    getUsers: (currentPage: number) => Promise<void>,\n    haveFollowingInProgress: Array<number>,\n    startNewDialogFromUsersPage: (id:number)=>Promise<void>,\n}\n\nconst Users: React.FC<UsersPropsType> = ({\n    users,\n    follow,\n    unfollow,\n    totalCount,\n    pageSize,\n    currentPage,\n    getUsers,\n    haveFollowingInProgress,\n    startNewDialogFromUsersPage,\n}) => {\n\n    return (\n        <div className={classes.users}>\n            <Paginator\n                totalCount={totalCount}\n                pageSize={pageSize}\n                currentPage={currentPage}\n                getUsers={getUsers}\n            />\n            <ul className={classes.usersWrapper} >\n                {\n                    users.map((user: UserType) => (\n                        <li className={classes.userCard} key={user.id}>\n                            <Link to={`../profile/${user.id}`}>\n                                <img\n                                    src={user.photos.small ? user.photos.small : userPhoto}\n                                    className={classes.avatar}\n                                    alt=\"User\"\n                                />\n                            </Link>\n                            {user.followed\n                                ?\n                                <button\n                                    disabled={haveFollowingInProgress.some((id: number): boolean => id === user.id)}\n                                    className={classes.btn}\n                                    onClick={() => {\n                                        unfollow(user)\n                                    }}\n                                >\n                                    UNFOLLOW\n                                </button>\n                                :\n                                <button\n                                    disabled={haveFollowingInProgress.some((id: number) :boolean => id === user.id)}\n                                    className={classes.btn}\n                                    onClick={() => {\n                                        follow(user)\n                                    }}\n                                >\n                                    FOLLOW\n                                </button>\n                            }\n                            <Link\n                                to={`../dialogs/`}\n                                className={classes.btn}\n                                onClick={() => { startNewDialogFromUsersPage(user.id)}}\n                            > START DIALOG </Link>\n                            <h3>{user.name}</h3>\n                            <p>{user.status}</p>\n                        </li>\n                    ))\n                }\n            </ul>\n        </div>\n    )\n}\n\nexport default Users;","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function () {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from 'reselect';\nimport { AppStateType } from './redux-store';\n\nexport const getUsersSelector = (state :AppStateType) => state.usersPage.users;\n\nexport const getUsersByReselectorSelector = createSelector(getUsersSelector, (users) => (\n    users.filter(() => true)\n));\n\n\nexport const getTotalUsersCountSelector = (state: AppStateType) => state.usersPage.totalCount\nexport const getPageSizeSelector = (state: AppStateType) => state.usersPage.pageSize\nexport const getCurrentPageSelector = (state: AppStateType) => state.usersPage.currentPage\nexport const getIsFetchingSelector = (state: AppStateType) => state.usersPage.isFetching\nexport const getHaveFollowingInProgressSelector = (state: AppStateType) => state.usersPage.haveFollowingInProgress","import { connect } from \"react-redux\";\nimport {\n    setState,\n    toggleIsFetching,\n    toggleFollowingStatus,\n    getUsers,\n} from \"../../Redux/users-reducer\";\nimport {\n    startNewDialogFromUsersPage,\n} from \"../../Redux/dialogs-reducer\";\nimport { followTC, unfollowTC } from \"../../Redux/users-reducer\";\nimport React from \"react\";\nimport Preloader from \"../common/Preloader/Preloader\";\nimport Users from \"./Users\";\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\nimport { compose } from \"redux\";\nimport {\n    getCurrentPageSelector,\n    getHaveFollowingInProgressSelector,\n    getIsFetchingSelector,\n    getPageSizeSelector,\n    getTotalUsersCountSelector,\n    getUsersByReselectorSelector,\n} from \"../../Redux/users-selectors\";\nimport { AppStateType } from \"../../Redux/redux-store\";\nimport { UserType, SetCurrentPageType, ToggleFollowingStatusType } from \"../../types/UsersTypes\";\n\ntype UsersAPIContainerPropsType = {\n    users: Array<UserType>,\n    followTC: (user: UserType) => Promise<void>,\n    unfollowTC: (user: UserType) => Promise<void>,\n    totalCount: number,\n    pageSize: number,\n    currentPage: number,\n    isFetching: boolean,\n    haveFollowingInProgress: Array<number>,\n    toggleFollowingStatus: (id: number) => ToggleFollowingStatusType,\n    getUsers: (currentPage: number) => Promise<void>,\n    isAuthorised: boolean,\n    setCurrentPage: (page: number)=> SetCurrentPageType,\n    startNewDialogFromUsersPage: (id:number)=>Promise<void>\n}\n\ntype PropsFromStateType = {\n    users: Array<UserType>,\n    totalCount: number,\n    pageSize: number,\n    currentPage: number,\n    isFetching: boolean,\n    haveFollowingInProgress: Array<number>,\n}\n\nclass UsersAPIComponent extends React.Component<UsersAPIContainerPropsType> {\n    componentDidMount() {\n        this.props.getUsers(1)\n\n    }\n    render() {\n        const {\n            users,\n            followTC,\n            unfollowTC,\n            totalCount,\n            pageSize,\n            currentPage,\n            isFetching,\n            haveFollowingInProgress,\n            getUsers,\n            startNewDialogFromUsersPage,\n        } = this.props;\n\n        return (isFetching\n            ? <div style={{\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                height: '90vh'\n            }}>\n                <Preloader />\n            </div>\n            : <Users\n                users={users}\n                follow={followTC}\n                unfollow={unfollowTC}\n                totalCount={totalCount}\n                pageSize={pageSize}\n                currentPage={currentPage}\n                getUsers={getUsers}\n                haveFollowingInProgress={haveFollowingInProgress}\n                startNewDialogFromUsersPage={startNewDialogFromUsersPage}\n            />\n        )\n    }\n}\n\nconst mapStateToProps = (state :AppStateType) :PropsFromStateType => ({\n    users: getUsersByReselectorSelector(state),\n    totalCount: getTotalUsersCountSelector(state),\n    pageSize: getPageSizeSelector(state),\n    currentPage: getCurrentPageSelector(state),\n    isFetching: getIsFetchingSelector(state),\n    haveFollowingInProgress: getHaveFollowingInProgressSelector(state),\n})\n\nexport default compose(\n    connect(mapStateToProps, {\n        followTC,\n        unfollowTC,\n        setState,\n        toggleIsFetching,\n        toggleFollowingStatus,\n        getUsers,\n        startNewDialogFromUsersPage,\n    }),\n    withAuthRedirect)(UsersAPIComponent)"],"sourceRoot":""}